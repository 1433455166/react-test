{"ast":null,"code":"var _jsxFileName = \"/Users/chencheng/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/1dc64184dfec0ae764b796cdaee53fde/Message/MessageTemp/11e579a58271ad70da616d26244756d1/File/react-test/src/components/TextFolding.js\",\n  _s = $RefreshSig$();\n// 使用React实现一个文本折叠组件\n// - 当传入文本实际渲染行数小于maxRow时文本正常展示\n// - 当传入文本实际渲染行数大于maxRow时展示【展开】按钮,点击【展开】按钮展示全部文本\n// - 以实现功能为主,样式无需还原度很高\n// 入参\n// interface IProps {\n//     text:string;//文本内容\n//     maxRow:number;//最大不折叠行数\n// }\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextFolding = props => {\n  _s();\n  const {\n    text = \"\",\n    maxRow = 1\n  } = props;\n  const [n, setN] = useState(maxRow);\n  const [show, setShow] = useState(!!text || false);\n  const onClick = () => {\n    setN(n + 1);\n    setShow(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [n, /*#__PURE__*/_jsxDEV(\"textarea\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"\\u5C55\\u5F00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(TextFolding, \"3nKyB+4cNDYntPjA1Bj7ljVkFqY=\");\n_c = TextFolding;\nvar _c;\n$RefreshReg$(_c, \"TextFolding\");","map":{"version":3,"names":["React","useState","TextFolding","props","text","maxRow","n","setN","show","setShow","onClick","display","flexDirection"],"sources":["/Users/chencheng/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/1dc64184dfec0ae764b796cdaee53fde/Message/MessageTemp/11e579a58271ad70da616d26244756d1/File/react-test/src/components/TextFolding.js"],"sourcesContent":["// 使用React实现一个文本折叠组件\n// - 当传入文本实际渲染行数小于maxRow时文本正常展示\n// - 当传入文本实际渲染行数大于maxRow时展示【展开】按钮,点击【展开】按钮展示全部文本\n// - 以实现功能为主,样式无需还原度很高\n// 入参\n// interface IProps {\n//     text:string;//文本内容\n//     maxRow:number;//最大不折叠行数\n// }\nimport React, { useState } from \"react\";\n\nexport const TextFolding = (props) => {\n  const { text = \"\", maxRow = 1 } = props;\n  const [n, setN] = useState(maxRow);\n  const [show, setShow] = useState(!!text || false);\n  const onClick = () => {\n    setN(n + 1);\n    setShow(false);\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      {n}\n      <textarea>{text}</textarea>\n      {show && <button onClick={onClick}>展开</button>}\n    </div>\n  );\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,OAAO,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EACpC,MAAM;IAAEC,IAAI,GAAG,EAAE;IAAEC,MAAM,GAAG;EAAE,CAAC,GAAGF,KAAK;EACvC,MAAM,CAACG,CAAC,EAAEC,IAAI,CAAC,GAAGN,QAAQ,CAACI,MAAM,CAAC;EAClC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAACG,IAAI,IAAI,KAAK,CAAC;EACjD,MAAMM,OAAO,GAAG,MAAM;IACpBH,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC;IACXG,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC;EACD,oBACE;IACE,KAAK,EAAE;MACLE,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE;IACjB,CAAE;IAAA,WAEDN,CAAC,eACF;MAAA,UAAWF;IAAI;MAAA;MAAA;MAAA;IAAA,QAAY,EAC1BI,IAAI,iBAAI;MAAQ,OAAO,EAAEE,OAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAY;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1C;AAEV,CAAC;AAAC,GApBWR,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}