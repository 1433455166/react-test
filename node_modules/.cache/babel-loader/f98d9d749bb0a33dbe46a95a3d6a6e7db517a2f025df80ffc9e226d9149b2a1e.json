{"ast":null,"code":"var _jsxFileName = \"/Users/chencheng/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/1dc64184dfec0ae764b796cdaee53fde/Message/MessageTemp/11e579a58271ad70da616d26244756d1/File/react-test/src/components/TextEllipsis/index.js\",\n  _s = $RefreshSig$();\nimport styles from \"./index.scss\";\nimport React, { useState, useRef, Fragment, useLayoutEffect } from \"react\";\n\n/**\n * 多行文本溢出显示省略号组件\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextEllipsis = _ref => {\n  _s();\n  let {\n    content,\n    headerText\n  } = _ref;\n  const contentRef = useRef({});\n  const [showAll, setShowAll] = useState(false);\n  const [needHidden, setNeedHidden] = useState(false); // 超出4行需要隐藏\n  const [isCompute, setIsCompute] = useState(false);\n\n  /**\n   * @description: 处理content文案的点击展开收起\n   * @return: null\n   */\n  const handleContent = e => {\n    e.stopPropagation();\n    setShowAll(!showAll);\n  };\n  // 判断文本超出行数\n  const isElementCollision = function (ele) {\n    let rowCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n    let cssStyles = arguments.length > 2 ? arguments[2] : undefined;\n    let removeChild = arguments.length > 3 ? arguments[3] : undefined;\n    if (!ele) {\n      return false;\n    }\n    const clonedNode = ele.cloneNode(true);\n    // 给clone的dom增加样式\n    clonedNode.style.overflow = \"visible\";\n    clonedNode.style.display = \"inline-block\";\n    clonedNode.style.width = \"auto\";\n    clonedNode.style.whiteSpace = \"nowrap\";\n    clonedNode.style.visibility = \"hidden\";\n    clonedNode.style.whiteSpace = \"pre-wrap\"; //支持换行\n    // 将传入的css字体样式赋值\n    if (cssStyles) {\n      Object.keys(cssStyles).forEach(item => {\n        clonedNode.style[item] = cssStyles[item];\n      });\n    }\n\n    // 给clone的dom增加id属性\n    const _time = new Date().getTime();\n    const containerID = `collision_node_id_${_time}`;\n    clonedNode.setAttribute(\"id\", containerID);\n    const tmpNode = document.getElementById(containerID);\n    let newNode = clonedNode;\n    if (tmpNode) {\n      document.body.replaceChild(clonedNode, tmpNode);\n    } else {\n      newNode = document.body.appendChild(clonedNode);\n    }\n    // 新增的dom宽度与原dom的宽度*限制行数做对比\n    // 一行是25高度，根据样式TextEllipsis.scss的textContent的样式line-height: px2rem(50);\n    const defaulltHeight = rowCount * 4;\n    let differ = false;\n    if (newNode.offsetHeight > defaulltHeight) {\n      differ = true;\n    }\n    if (removeChild) {\n      document.body.removeChild(newNode);\n    }\n    return differ;\n  };\n  useLayoutEffect(() => {\n    const cssStyles = {\n      fontWeight: \"400\"\n    };\n    const needHiddenValue = isElementCollision(contentRef.current, 6, cssStyles, true);\n    setNeedHidden(needHiddenValue);\n    setIsCompute(true);\n  }, [contentRef]);\n  const www = document.getElementsByClassName(\"textContent\");\n  console.log({\n    webkitLineClamp: www[0].style\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.textEllipsis,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        opacity: isCompute ? 1 : 0\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: contentRef,\n        className: `textContent ${!showAll && needHidden ? \"hidden-text\" : \"\"}`,\n        children: [headerText ? headerText() : null, content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), !isCompute && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.bgLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.bgLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), isCompute && needHidden && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles[\"content-btn\"],\n      onClick: e => {\n        handleContent(e);\n      },\n      children: !showAll ? \"全文\" : \"收起\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(TextEllipsis, \"3cb5tyPfeP3LK7d5ig8NbdM+qv0=\");\n_c = TextEllipsis;\nexport default TextEllipsis;\nvar _c;\n$RefreshReg$(_c, \"TextEllipsis\");","map":{"version":3,"names":["styles","React","useState","useRef","Fragment","useLayoutEffect","TextEllipsis","content","headerText","contentRef","showAll","setShowAll","needHidden","setNeedHidden","isCompute","setIsCompute","handleContent","e","stopPropagation","isElementCollision","ele","rowCount","cssStyles","removeChild","clonedNode","cloneNode","style","overflow","display","width","whiteSpace","visibility","Object","keys","forEach","item","_time","Date","getTime","containerID","setAttribute","tmpNode","document","getElementById","newNode","body","replaceChild","appendChild","defaulltHeight","differ","offsetHeight","fontWeight","needHiddenValue","current","www","getElementsByClassName","console","log","webkitLineClamp","textEllipsis","opacity","bgLoad"],"sources":["/Users/chencheng/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/1dc64184dfec0ae764b796cdaee53fde/Message/MessageTemp/11e579a58271ad70da616d26244756d1/File/react-test/src/components/TextEllipsis/index.js"],"sourcesContent":["import styles from \"./index.scss\";\nimport React, { useState, useRef, Fragment, useLayoutEffect } from \"react\";\n\n/**\n * 多行文本溢出显示省略号组件\n */\nconst TextEllipsis = ({ content, headerText }) => {\n  const contentRef = useRef({});\n  const [showAll, setShowAll] = useState(false);\n  const [needHidden, setNeedHidden] = useState(false); // 超出4行需要隐藏\n  const [isCompute, setIsCompute] = useState(false);\n\n  /**\n   * @description: 处理content文案的点击展开收起\n   * @return: null\n   */\n  const handleContent = (e) => {\n    e.stopPropagation();\n\n    setShowAll(!showAll);\n  };\n  // 判断文本超出行数\n  const isElementCollision = (ele, rowCount = 6, cssStyles, removeChild) => {\n    if (!ele) {\n      return false;\n    }\n    const clonedNode = ele.cloneNode(true);\n    // 给clone的dom增加样式\n    clonedNode.style.overflow = \"visible\";\n    clonedNode.style.display = \"inline-block\";\n    clonedNode.style.width = \"auto\";\n    clonedNode.style.whiteSpace = \"nowrap\";\n    clonedNode.style.visibility = \"hidden\";\n    clonedNode.style.whiteSpace = \"pre-wrap\"; //支持换行\n    // 将传入的css字体样式赋值\n    if (cssStyles) {\n      Object.keys(cssStyles).forEach((item) => {\n        clonedNode.style[item] = cssStyles[item];\n      });\n    }\n\n    // 给clone的dom增加id属性\n    const _time = new Date().getTime();\n\n    const containerID = `collision_node_id_${_time}`;\n\n    clonedNode.setAttribute(\"id\", containerID);\n\n    const tmpNode = document.getElementById(containerID);\n    let newNode = clonedNode;\n\n    if (tmpNode) {\n      document.body.replaceChild(clonedNode, tmpNode);\n    } else {\n      newNode = document.body.appendChild(clonedNode);\n    }\n    // 新增的dom宽度与原dom的宽度*限制行数做对比\n    // 一行是25高度，根据样式TextEllipsis.scss的textContent的样式line-height: px2rem(50);\n    const defaulltHeight = rowCount * 4;\n    let differ = false;\n\n    if (newNode.offsetHeight > defaulltHeight) {\n      differ = true;\n    }\n\n    if (removeChild) {\n      document.body.removeChild(newNode);\n    }\n    return differ;\n  };\n\n  useLayoutEffect(() => {\n    const cssStyles = { fontWeight: \"400\" };\n\n    const needHiddenValue = isElementCollision(\n      contentRef.current,\n      6,\n      cssStyles,\n      true\n    );\n\n    setNeedHidden(needHiddenValue);\n    setIsCompute(true);\n  }, [contentRef]);\n  const www = document.getElementsByClassName(\"textContent\");\n  console.log({ webkitLineClamp: www[0].style });\n  return (\n    <div className={styles.textEllipsis}>\n      <div style={{ opacity: isCompute ? 1 : 0 }}>\n        <div\n          ref={contentRef}\n          className={`textContent ${\n            !showAll && needHidden ? \"hidden-text\" : \"\"\n          }`}\n        >\n          {headerText ? headerText() : null}\n          {content}\n        </div>\n      </div>\n      {!isCompute && (\n        <Fragment>\n          <div className={styles.bgLoad} />\n          <div className={styles.bgLoad} />\n        </Fragment>\n      )}\n      {isCompute && needHidden && (\n        <button\n          className={styles[\"content-btn\"]}\n          onClick={(e) => {\n            handleContent(e);\n          }}\n        >\n          {!showAll ? \"全文\" : \"收起\"}\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default TextEllipsis;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}